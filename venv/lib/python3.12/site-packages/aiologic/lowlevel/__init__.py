#!/usr/bin/env python3

# SPDX-FileCopyrightText: 2024 Ilya Egorov <0x42005e1f@gmail.com>
# SPDX-License-Identifier: ISC

from ._checkpoints import async_checkpoint as async_checkpoint
from ._checkpoints import asyncio_checkpoints_cvar as asyncio_checkpoints_cvar
from ._checkpoints import \
    cancel_shielded_checkpoint as cancel_shielded_checkpoint
from ._checkpoints import checkpoint as checkpoint
from ._checkpoints import checkpoint_if_cancelled as checkpoint_if_cancelled
from ._checkpoints import curio_checkpoints_cvar as curio_checkpoints_cvar
from ._checkpoints import \
    eventlet_checkpoints_cvar as eventlet_checkpoints_cvar
from ._checkpoints import gevent_checkpoints_cvar as gevent_checkpoints_cvar
from ._checkpoints import green_checkpoint as green_checkpoint
from ._checkpoints import repeat_if_cancelled as repeat_if_cancelled
from ._checkpoints import \
    threading_checkpoints_cvar as threading_checkpoints_cvar
from ._checkpoints import trio_checkpoints_cvar as trio_checkpoints_cvar
from ._events import DUMMY_EVENT as DUMMY_EVENT
from ._events import AsyncEvent as AsyncEvent
from ._events import DummyEvent as DummyEvent
from ._events import Event as Event
from ._events import GreenEvent as GreenEvent
from ._flags import Flag as Flag
from ._ident import current_async_task as current_async_task
from ._ident import current_async_task_ident as current_async_task_ident
from ._ident import current_async_token as current_async_token
from ._ident import current_async_token_ident as current_async_token_ident
from ._ident import current_green_task as current_green_task
from ._ident import current_green_task_ident as current_green_task_ident
from ._ident import current_green_token as current_green_token
from ._ident import current_green_token_ident as current_green_token_ident
from ._libraries import AsyncLibraryNotFoundError as AsyncLibraryNotFoundError
from ._libraries import GreenLibraryNotFoundError as GreenLibraryNotFoundError
from ._libraries import asyncio_running as asyncio_running
from ._libraries import curio_running as curio_running
from ._libraries import current_async_library as current_async_library
from ._libraries import \
    current_async_library_tlocal as current_async_library_tlocal
from ._libraries import current_green_library as current_green_library
from ._libraries import \
    current_green_library_tlocal as current_green_library_tlocal
from ._libraries import eventlet_running as eventlet_running
from ._libraries import gevent_running as gevent_running
from ._libraries import threading_running as threading_running
from ._libraries import trio_running as trio_running
from ._markers import MISSING as MISSING
from ._markers import MissingType as MissingType
from ._threads import current_thread as current_thread
from ._threads import current_thread_ident as current_thread_ident

# modify __module__ for shorter repr() and better pickle support
for __value in list(globals().values()):
    if getattr(__value, "__module__", "").startswith(f"{__name__}."):
        try:
            __value.__module__ = __name__
        except AttributeError:
            pass

    del __value
